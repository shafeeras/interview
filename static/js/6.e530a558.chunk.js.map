{"version":3,"sources":["api/responseInterceptor.js","api/api.js","api/requestInterceptor.js","api/apiEndpoints.js","components/Input/styled.js","components/Input/index.js","components/Search/styled.js","components/Search/index.js","components/List/styled.js","components/List/index.js","pages/MovieList/styled.js","pages/MovieList/components/ListItem.js","pages/MovieList/components/index.js","components/LazyLoading/index.js","pages/MovieList/index.js","services/MovieList/index.js"],"names":["getUnknownError","message","response","error","API","axios","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","onRequest","Promise","reject","customResponse","status","data","errorMessage","customError","clear","window","location","reload","endPoints","InputElm","styled","input","props","theme","color","white","font","normal","placeholder","Input","inputProps","Wrapper","div","black","shadow","Arrow","span","SearchIcon","Search","className","defaultProps","PropTypes","Ul","ul","media","smallScreen","mobile","ipad","mediumScreen","largeScreen","List","movieList","map","movie","index","renderComponent","Layout","Li","li","Preview","url","Label","medium","ListItem","useState","node","setNode","visible","useVisibility","ref","item","poster_image","name","LazyList","Fragment","key","LazyLoading","WrappedComponent","next","loadMore","hasMore","dataLength","length","scrollThreshold","connect","state","movies","moviesReducer","dispatch","fetchMovies","offset","offSet","getState","get","then","resp","updateMovies","page","catch","searchVal","updateSearchVal","moviesList","updateMoviesList","content","content_items","title","limit","useEffect","onChange","event","value","target","debounce","filter","toLowerCase","includes"],"mappings":"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","file":"static/js/6.e530a558.chunk.js","sourcesContent":["const getUnknownError = message => ({\r\n    response: {\r\n      error: [\r\n        message && typeof message === typeof \"\"\r\n          ? message\r\n          : \"Service unavailable. Please try after some time.\"\r\n      ]\r\n    }\r\n  });\r\n  \r\n  export function onResponse(response) {\r\n    const customResponse = response;\r\n    const { status } = response.data;\r\n    if (status === 500) {\r\n      return Promise.reject(getUnknownError());\r\n    } else if (status === 400) {\r\n      const { errorMessage } = response.data.error[0];\r\n      return Promise.reject(getUnknownError(errorMessage));\r\n    }\r\n    customResponse.data = response.data;\r\n    return customResponse;\r\n  }\r\n  \r\n  export function onResponseError(error) {\r\n    let customError = { ...error };\r\n    const status = error.response\r\n      ? error.response.headers.status || error.response.status\r\n      : -1;\r\n    if (status === 401) {\r\n      localStorage.clear();\r\n      window.location.reload(\"/\");\r\n    } else if (status === 500) {\r\n      customError = getUnknownError();\r\n    } else if (status === 400) {\r\n      customError = {\r\n        response: {\r\n          data: { message: error.response.data.message },\r\n          status: 400\r\n        }\r\n      };\r\n    } else if (status !== 401) {\r\n      customError = {\r\n        response: {\r\n          data: { message: \"Service unavailable. Please try after some time.\" }\r\n        }\r\n      };\r\n    }\r\n    return Promise.reject(customError);\r\n  }","import axios from \"axios\";\r\nimport { onResponse, onResponseError } from \"./responseInterceptor\";\r\nimport { onRequest, onRequestError } from \"./requestInterceptor\";\r\n\r\nexport const BASE_URL = \"https://shafeeras.github.io\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: BASE_URL\r\n});\r\n\r\nAPI.interceptors.request.use(config => onRequest(config), onRequestError);\r\nAPI.interceptors.response.use(onResponse, onResponseError);\r\n","export function onRequest(config) {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    config.headers = {\r\n      ...config.headers,\r\n      Authorization: `JWT ${token}`\r\n    }\r\n  }\r\n  return config\r\n}\r\n\r\nexport function onRequestError(error) {\r\n  return Promise.reject(error)\r\n}\r\n","export const endPoints = {\r\n  movieList: \"../../assets/db/CONTENTLISTINGPAGE-PAGE\"\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputElm = styled.input`\r\n  color: ${props => props.theme.color.white};\r\n  font-size: ${props => props.theme.font.normal};\r\n  width: 100%;\r\n  min-height: 30px;\r\n  font-family: Titillium-Regular;\r\n  background: transparent;\r\n  box-sizing: border-box;\r\n  :hover,\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  ::-webkit-input-placeholder {\r\n    color: ${props => props.theme.color.placeholder};\r\n  }\r\n\r\n  :-ms-input-placeholder {\r\n    color: ${props => props.theme.color.placeholder};\r\n  }\r\n\r\n  ::placeholder {\r\n    color: ${props => props.theme.color.placeholder};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { InputElm } from \"./styled\";\r\n\r\nconst Input = ({inputProps}) => {\r\n  return <InputElm {...inputProps}></InputElm>;\r\n};\r\n\r\nInput.propTypes = {};\r\n\r\nexport default Input;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  .input {\r\n    border: none;\r\n    padding: 0px 60px;\r\n    min-height: 40px;\r\n    background: ${props => props.theme.color.black};\r\n    box-shadow: 3px 4px 9px 3px ${props => props.theme.color.shadow};\r\n  }\r\n  .icon {\r\n    background-repeat: no-repeat;\r\n    width: 16px;\r\n    height: 16px;\r\n    display: block;\r\n    position: absolute;\r\n    background-size: cover;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`;\r\nexport const Arrow = styled.span`\r\n  background-image: url(\"../../assets/images/Back.png\");\r\n  left: 10px;\r\n`;\r\nexport const SearchIcon = styled.span`\r\n  background-image: url(\"../../assets/images/search.png\");\r\n  right: 10px;\r\n  pointer-events: none;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Input from \"../Input\";\r\nimport { Wrapper, Arrow, SearchIcon } from \"./styled\";\r\n\r\nconst Search = ({ inputProps, className }) => {\r\n  return (\r\n    <Wrapper className={className}>\r\n      <Arrow className=\"icon\" />\r\n      <Input inputProps={inputProps}></Input>\r\n      <SearchIcon className=\"icon\" />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  PropTypes: PropTypes.object\r\n};\r\n\r\nSearch.defaultProps = {\r\n  PropTypes: {}\r\n};\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Ul = styled.ul`\r\n  padding-top: 76px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  ${props => props.theme.media.smallScreen} {\r\n    max-width: 260px;\r\n    margin: 0 auto;\r\n  }\r\n  ${props => props.theme.media.mobile} {\r\n    max-width: 360px;\r\n    margin: 0 auto;\r\n  }\r\n  ${props => props.theme.media.ipad} {\r\n    max-width: 736px;\r\n    margin: 0 auto;\r\n  }\r\n  ${props => props.theme.media.mediumScreen} {\r\n    max-width: 920px;\r\n    margin: 0 auto;\r\n  }\r\n  ${props => props.theme.media.largeScreen} {\r\n    max-width: 1316px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Ul } from \"./styled\";\r\n\r\nconst List = props => {\r\n  return (\r\n    <Ul>\r\n      {props.movieList.map((movie, index) => {\r\n        return props.renderComponent(movie, index);\r\n      })}\r\n    </Ul>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  renderComponent: PropTypes.func.isRequired,\r\n  movieList: PropTypes.array\r\n};\r\n\r\nList.defaultProps = {\r\n  movieList: []\r\n};\r\n\r\nexport default List;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Layout = styled.div`\r\n  color: ${props => props.theme.color.white};\r\n  .search {\r\n    position: fixed;\r\n    display: block;\r\n    max-width: 260px;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    ${props => props.theme.media.mobile} {\r\n      max-width: 360px;\r\n      margin: 0 auto;\r\n    }\r\n    ${props => props.theme.media.ipad} {\r\n      max-width: 736px;\r\n      margin: 0 auto;\r\n    }\r\n    ${props => props.theme.media.mediumScreen} {\r\n      max-width: 920px;\r\n      margin: 0 auto;\r\n    }\r\n    ${props => props.theme.media.largeScreen} {\r\n      max-width: 1316px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  padding-bottom: 36px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-left: 15px;\r\n  margin-right: 15px;\r\n  ${props => props.theme.media.mobile} {\r\n    margin-left: 10px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n\r\nexport const Preview = styled.span`\r\n  background-image: url(${props => props.url});\r\n  background-repeat: no-repeat;\r\n  width: 100px;\r\n  height: 100px;\r\n  display: block;\r\n  background-size: cover;\r\n  ${props => props.theme.media.ipad} {\r\n    width: 154px;\r\n    height: 154px;\r\n  }\r\n  ${props => props.theme.media.mediumScreen} {\r\n    width: 154px;\r\n    height: 154px;\r\n  }\r\n  ${props => props.theme.media.largeScreen} {\r\n    width: 158px;\r\n    height: 158px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.span`\r\n  color: ${props => props.theme.color.white};\r\n  font-size: ${props => props.theme.font.medium};\r\n  font-family: Titillium-Regular;\r\n  padding-top: 10px;\r\n  width: 100px;\r\n  word-break: break-word;\r\n  ${props => props.theme.media.ipad} {\r\n    width: 154px;\r\n  }\r\n  ${props => props.theme.media.mediumScreen} {\r\n    width: 154px;\r\n  }\r\n  ${props => props.theme.media.largeScreen} {\r\n    width: 158px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useVisibility } from \"../../../utils\";\r\nimport { Li, Preview, Label } from \"../styled\";\r\n\r\nconst ListItem = props => {\r\n  const [node, setNode] = useState(null);\r\n  const visible = useVisibility(node);\r\n\r\n  return (\r\n    <Li ref={setNode}>\r\n      <Preview\r\n        url={visible ? `../../assets/images/${props.item.poster_image}` : \"\"}\r\n      ></Preview>\r\n      <Label>{props.item.name}</Label>\r\n    </Li>\r\n  );\r\n};\r\n\r\nListItem.propTypes = {\r\n  item: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { LazyLoading } from \"../../../components/LazyLoading\";\r\nimport List from \"../../../components/List\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nconst LazyList = props => {\r\n  const renderListItem = (item, index) => {\r\n    return <ListItem key={`${index}--${item.poster_image}`} item={item} />;\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {props.movieList && (\r\n        <List\r\n          movieList={props.movieList}\r\n          renderComponent={renderListItem}\r\n        ></List>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nLazyList.propTypes = {\r\n  movieList: PropTypes.array,\r\n};\r\n\r\nLazyList.defaultProps = {\r\n  movieList: []\r\n};\r\n\r\nexport default LazyLoading(LazyList);\r\n","import React from \"react\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\n\r\nexport const LazyLoading = WrappedComponent => {\r\n  const LazyRender = props => {\r\n    return (\r\n      <InfiniteScroll\r\n        next={props.loadMore}\r\n        hasMore={props.hasMore}\r\n        dataLength={props.length}\r\n        scrollThreshold={props.scrollThreshold}\r\n      >\r\n        <WrappedComponent {...props} />\r\n      </InfiniteScroll>\r\n    );\r\n  };\r\n  return LazyRender;\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { debounce } from \"../../utils\";\r\nimport { fetchMovies } from \"../../services/MovieList\";\r\nimport Search from \"../../components/Search\";\r\nimport LazyList from \"./components\";\r\nimport { Layout } from \"./styled\";\r\n\r\nconst MovieList = props => {\r\n  const limit = 3;\r\n  const [searchVal, updateSearchVal] = useState(\"\");\r\n  const [moviesList, updateMoviesList] = useState([]);\r\n  const {\r\n    content_items: { content },\r\n    offSet,\r\n    title\r\n  } = props.movies;\r\n\r\n  // this needs to be handle with real api\r\n  const filterMovies = value => () => {\r\n    if (value) {\r\n      updateMoviesList(\r\n        content.filter(movie => {\r\n          return movie.name.toLowerCase().includes(value.toLowerCase());\r\n        })\r\n      );\r\n    } else {\r\n      updateMoviesList(content);\r\n    }\r\n  };\r\n\r\n  const inputChange = event => {\r\n    updateSearchVal(event.target.value);\r\n    debounce(filterMovies(event.target.value), 300);\r\n  };\r\n\r\n  const fetchMovies = limit => {\r\n    props.fetchMovies(limit);\r\n  };\r\n\r\n  const loadMore = () => {\r\n    fetchMovies(offSet + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateMoviesList(content);\r\n  }, [content.length]);\r\n\r\n  useEffect(() => {\r\n    fetchMovies(offSet);\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <Search\r\n        className=\"search\"\r\n        inputProps={{\r\n          className: \"input\",\r\n          onChange: inputChange,\r\n          value: searchVal,\r\n          placeholder: title\r\n        }}\r\n      ></Search>\r\n      {moviesList.length > 0 && (\r\n        <LazyList\r\n          movieList={moviesList}\r\n          loadMore={loadMore}\r\n          hasMore={offSet < limit}\r\n          length={moviesList.length}\r\n          scrollThreshold={0.5}\r\n        />\r\n      )}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nMovieList.propTypes = {\r\n  movies: PropTypes.object.isRequired\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    movies: state.moviesReducer.movies\r\n  }),\r\n  dispatch => ({\r\n    fetchMovies: offset => dispatch(fetchMovies(offset))\r\n  })\r\n)(MovieList);\r\n","import { API } from \"../../api/api\";\r\nimport { endPoints } from \"../../api/apiEndpoints\";\r\nimport { updateMovies } from \"../../actions/Movies\";\r\n\r\nexport const fetchMovies = offSet => (dispatch, getState) => {\r\n  return API.get(`${endPoints.movieList}${offSet}.JSON`).then(resp => {\r\n    dispatch(updateMovies({ ...resp.data.page, offSet }));\r\n  }).catch(error => {\r\n    // error nedd to handle\r\n  })\r\n};\r\n"],"sourceRoot":""}